"use strict";(self.webpackChunknarrative_docs=self.webpackChunknarrative_docs||[]).push([[907],{25580:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>o,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var t=r(74848),n=r(28453);const s={sidebar_label:"Character Appearance"},i="Character Appearance",c={id:"pro/inventory/items/equipment/character-appearance",title:"Character Appearance",description:"The Character Appearance is a data asset that allows you to define how a character looks.",source:"@site/docs/pro/inventory/items/equipment/character-appearance.md",sourceDirName:"pro/inventory/items/equipment",slug:"/pro/inventory/items/equipment/character-appearance",permalink:"/pro/inventory/items/equipment/character-appearance",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Character Appearance"},sidebar:"tutorialSidebar",previous:{title:"Equipment",permalink:"/pro/inventory/items/equipment/"},next:{title:"Clothing",permalink:"/pro/inventory/items/equipment/clothing"}},l={},h=[{value:"Properties",id:"properties",level:2},{value:"FCharacterCreatorAttribute",id:"fcharactercreatorattribute",level:3},{value:"FCreatorMeshMaterial",id:"fcreatormeshmaterial",level:3},{value:"Adding extra equipment slots",id:"adding-extra-equipment-slots",level:2},{value:"NarrativeGameplayTags.h",id:"narrativegameplaytagsh",level:3},{value:"NarrativeGameplayTags.cpp",id:"narrativegameplaytagscpp",level:3},{value:"NarrativeCharacter.h",id:"narrativecharacterh",level:3},{value:"NarrativeCharacter.Cpp",id:"narrativecharactercpp",level:3},{value:"Animations",id:"animations",level:2}];function d(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"character-appearance",children:"Character Appearance"})}),"\n",(0,t.jsx)(a.p,{children:"The Character Appearance is a data asset that allows you to define how a character looks."}),"\n",(0,t.jsx)(a.p,{children:"It lets you state all the meshes, materials, morph targets and grooms that build it up."}),"\n",(0,t.jsx)(a.p,{children:"The appearance asset has been built in a way that whether you use modular or combined characters, simply adding the Meshes Key (gameplay tag) to the mesh, Narrative will find the correct mesh."}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.img,{alt:"character-appearence-dataasset.webp",src:r(4037).A+"",width:"1085",height:"1123"})}),"\n",(0,t.jsx)(a.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"Variable Name"}),(0,t.jsx)(a.th,{children:"Type"}),(0,t.jsx)(a.th,{children:"Description"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Form Tag"}),(0,t.jsx)(a.td,{children:"FGameplayTag"}),(0,t.jsx)(a.td,{children:"Tag representing the form selected in the character creator (race, gender)."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Unarmed Anim BP"}),(0,t.jsx)(a.td,{children:"TSubclassOf<UAnimInstance>"}),(0,t.jsx)(a.td,{children:"The animation blueprint to use when the character is unarmed."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Meshes"}),(0,t.jsxs)(a.td,{children:["TMap<FGameplayTag, ",(0,t.jsx)(a.a,{href:"/pro/inventory/items/equipment/character-appearance#fcharactercreatorattribute",children:"FCharacterCreatorAttribute"}),">"]}),(0,t.jsx)(a.td,{children:"Map of mesh attributes for specific slots."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Grooms"}),(0,t.jsxs)(a.td,{children:["TMap<FGameplayTag, ",(0,t.jsx)(a.a,{href:"/pro/inventory/items/equipment/character-appearance#fcharactercreatorattribute",children:"FCharacterCreatorAttribute"}),">"]}),(0,t.jsx)(a.td,{children:"Map of groom attributes for specific slots."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Morphs"}),(0,t.jsx)(a.td,{children:"TArray<FCreatorMeshMorph>"}),(0,t.jsx)(a.td,{children:"Morph targets to apply to the mesh."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Scalar Values"}),(0,t.jsx)(a.td,{children:"TMap<FGameplayTag, float>"}),(0,t.jsx)(a.td,{children:"Global scalar values that morphs and meshes can reference."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Vector Values"}),(0,t.jsx)(a.td,{children:"TMap<FGameplayTag, FLinearColor>"}),(0,t.jsx)(a.td,{children:"Global vector values that morphs and meshes can reference."})]})]})]}),"\n",(0,t.jsx)(a.h3,{id:"fcharactercreatorattribute",children:"FCharacterCreatorAttribute"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"Variable Name"}),(0,t.jsx)(a.th,{children:"Type"}),(0,t.jsx)(a.th,{children:"Description"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Mesh"}),(0,t.jsx)(a.td,{children:"TObjectPtr<USkeletalMesh>"}),(0,t.jsx)(a.td,{children:"The skeletal mesh to apply to the character."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"b Use Leader Pose"}),(0,t.jsx)(a.td,{children:"bool"}),(0,t.jsx)(a.td,{children:"Indicates if the mesh should follow the leader pose component."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Mesh Materials"}),(0,t.jsxs)(a.td,{children:["TArray<",(0,t.jsx)(a.a,{href:"/pro/inventory/items/equipment/character-appearance#fcreatormeshmaterial",children:"FCreatorMeshMaterial"}),">"]}),(0,t.jsx)(a.td,{children:"Materials to apply to the mesh, including parameter overrides."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Morphs Array"}),(0,t.jsx)(a.td,{children:"TArray<FCharacterCreatorAttribute Morph>"}),(0,t.jsx)(a.td,{children:"Array of morph attributes for character customization."})]})]})]}),"\n",(0,t.jsx)(a.h3,{id:"fcreatormeshmaterial",children:"FCreatorMeshMaterial"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"Variable Name"}),(0,t.jsx)(a.th,{children:"Type"}),(0,t.jsx)(a.th,{children:"Description"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Material"}),(0,t.jsx)(a.td,{children:"TObjectPtr<Material>"}),(0,t.jsx)(a.td,{children:"The skeletal mesh to apply to the character."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Scalar Tag ID"}),(0,t.jsx)(a.td,{children:"FGameplayTag"}),(0,t.jsx)(a.td,{children:"Tag to retrieve scalar values for material parameters."})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Vector Tag ID"}),(0,t.jsx)(a.td,{children:"FGameplayTag"}),(0,t.jsx)(a.td,{children:"Tag to retrieve vector values for material parameters."})]})]})]}),"\n",(0,t.jsx)(a.h2,{id:"adding-extra-equipment-slots",children:"Adding extra equipment slots"}),"\n",(0,t.jsx)(a.admonition,{type:"note",children:(0,t.jsx)(a.p,{children:"As of the current version of NarrativePro, it is recommended to update the C++ to add extra equipment slots."})}),"\n",(0,t.jsx)(a.h3,{id:"narrativegameplaytagsh",children:"NarrativeGameplayTags.h"}),"\n",(0,t.jsxs)(a.p,{children:["Open ",(0,t.jsx)(a.strong,{children:"NarrativeGameplayTags.h"})," and add your custom slot."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:"FGameplayTag Equipment_Slot_XXX;\n"})}),"\n",(0,t.jsx)(a.p,{children:"For example:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:"FGameplayTag Equipment_Slot_Vest;\n"})}),"\n",(0,t.jsx)(a.h3,{id:"narrativegameplaytagscpp",children:"NarrativeGameplayTags.cpp"}),"\n",(0,t.jsxs)(a.p,{children:["Now open ",(0,t.jsx)(a.strong,{children:"NarrativeGameplayTags.cpp"})," and add your custom tag addition."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:'AddTag(Equipment_Slot_XXX, "Narrative.Equipment.Slot.Mesh.XXX", "Tag for the XXX equipment slot");\n'})}),"\n",(0,t.jsx)(a.p,{children:"For example:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:'AddTag(Equipment_Slot_Vest, "Narrative.Equipment.Slot.Mesh.Vest", "Tag for the Vest equipment slot");\n'})}),"\n",(0,t.jsx)(a.h3,{id:"narrativecharacterh",children:"NarrativeCharacter.h"}),"\n",(0,t.jsxs)(a.p,{children:["Now open ",(0,t.jsx)(a.strong,{children:"NarrativeCharacter.h"})," and create a new Skeletal Mesh to support your new equipment slot."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:'UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = "Narrative|Components|Body Meshes")\nTObjectPtr<class USkeletalMeshComponent> XXXMesh;\n'})}),"\n",(0,t.jsx)(a.p,{children:"For example:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:'UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category = "Narrative|Components|Body Meshes")\nTObjectPtr<class USkeletalMeshComponent> VestMesh;\n'})}),"\n",(0,t.jsx)(a.h3,{id:"narrativecharactercpp",children:"NarrativeCharacter.Cpp"}),"\n",(0,t.jsxs)(a.p,{children:["Now open ",(0,t.jsx)(a.strong,{children:"NarrativeCharacter.cpp"})," and set-up the new Skeletal Mesh."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:'XXXMesh = CreateDefaultSubobject<USkeletalMeshComponent>(TEXT("XXXMesh"));\nXXXMesh->SetupAttachment(GetMesh());\nXXXMesh->SetReceivesDecals(false);\nXXXMesh->SetLeaderPoseComponent(GetMesh());\n'})}),"\n",(0,t.jsx)(a.p,{children:"For example:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:'VestMesh = CreateDefaultSubobject<USkeletalMeshComponent>(TEXT("VestMesh"));\nVestMesh->SetupAttachment(GetMesh());\nVestMesh->SetReceivesDecals(false);\nVestMesh->SetLeaderPoseComponent(GetMesh());\n'})}),"\n",(0,t.jsx)(a.p,{children:"Finally, find the InitializeEquipmentComponent function and add your mapping."}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:"EquipmentMap.Add(FNarrativeGameplayTags::Get().Equipment_Slot_XXX, XXXMesh);\n"})}),"\n",(0,t.jsx)(a.p,{children:"For example:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-cpp",children:"EquipmentMap.Add(FNarrativeGameplayTags::Get().Equipment_Slot_Vest, VestMesh);\n"})}),"\n",(0,t.jsx)(a.h2,{id:"animations",children:"Animations"}),"\n",(0,t.jsxs)(a.p,{children:["If you are going to use a custom animation blueprint, make sure it inherits from ",(0,t.jsx)(a.strong,{children:"Narrative Anim Instance"}),". This will give you access to all the default variables such as NPC data and combat hits."]})]})}function o(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4037:(e,a,r)=>{r.d(a,{A:()=>t});const t=r.p+"assets/images/character-appearence-dataasset-f454b1bc4e3f9f1a591e4edc8132b781.webp"},28453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>c});var t=r(96540);const n={},s=t.createContext(n);function i(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);