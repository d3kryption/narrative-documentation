"use strict";(self.webpackChunknarrative_docs=self.webpackChunknarrative_docs||[]).push([[1262],{10260:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>n,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var t=s(74848),a=s(28453);const i={sidebar_label:"Speakers",sidebar_position:0},n="Speakers",d={id:"pro/dialogue/speakers",title:"Speakers",description:"Speakers are the people who are part of your dialogue.",source:"@site/docs/pro/dialogue/speakers.md",sourceDirName:"pro/dialogue",slug:"/pro/dialogue/speakers",permalink:"/pro/dialogue/speakers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_label:"Speakers",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Dialogue",permalink:"/pro/dialogue/"},next:{title:"Dialogue Nodes",permalink:"/pro/dialogue/dialogue-nodes/"}},o={},l=[{value:"Speaker Properties",id:"speaker-properties",level:3},{value:"Player Speakers",id:"player-speakers",level:2},{value:"Properties",id:"properties",level:3}];function h(e){const r={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"speakers",children:"Speakers"})}),"\n",(0,t.jsx)(r.p,{children:"Speakers are the people who are part of your dialogue."}),"\n",(0,t.jsx)(r.p,{children:"They don't have to speak and can just be visible, or they can have fully interactive dialogue."}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["The player does not count as a speaker. Instead, they are included in ",(0,t.jsx)(r.a,{href:"/pro/dialogue/speakers#player-speakers",children:"Player Speakers"}),"."]})}),"\n",(0,t.jsx)(r.h3,{id:"speaker-properties",children:"Speaker Properties"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"NPCDataAsset"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/pro/npcs/",children:"UNPCDefinition"})}),(0,t.jsx)(r.td,{children:"The speakers NPC data asset - if this is set to something, we'll use the NPC subsystem to grab this speaker."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"DefaultSpeakerShot"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../dialogue/dialogue-sequence/",children:"UNarrativeDialogueSequence"})}),(0,t.jsx)(r.td,{children:"Sequence to use whenever this speaker is talking (will be overridden by shot set on line)."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SpeakerAvatarClass"}),(0,t.jsx)(r.td,{children:"TSubclassOf<AActor>"}),(0,t.jsx)(r.td,{children:"Set this to a valid actor class if you want narrative to automatically spawn your speaker avatar in, and destroy it when the dialogue ends."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SpeakerAvatarTransform"}),(0,t.jsx)(r.td,{children:"FTransform"}),(0,t.jsx)(r.td,{children:"The transform for the SpeakerActor that gets spawned in, if one is set. (world location)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"NodeColor"}),(0,t.jsx)(r.td,{children:"FLinearColor"}),(0,t.jsx)(r.td,{children:"Custom node colour for this NPC in the graph."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SpeakerID"}),(0,t.jsx)(r.td,{children:"FName"}),(0,t.jsx)(r.td,{children:"The name of this speaker. This is driven by the NPC Data Assets ID."})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"player-speakers",children:"Player Speakers"}),"\n",(0,t.jsxs)(r.p,{children:["Player Speakers are the users who are part of the dialogue. This can include the primary player, or ",(0,t.jsx)(r.a,{href:"../parties",children:"the party"}),"."]}),"\n",(0,t.jsx)(r.p,{children:"They don't have to speak and can just be visible, or they can have fully interactive dialogue."}),"\n",(0,t.jsx)(r.h3,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(r.p,{children:["Player Speakers inherit from the base ",(0,t.jsx)(r.a,{href:"/pro/dialogue/speakers",children:"Speakers"})," class"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"SelectingReplyShot"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"../dialogue/dialogue-sequence/",children:"UNarrativeDialogueSequence"})}),(0,t.jsx)(r.td,{children:"Sequence to play when player is selecting their reply, overrides SelectingReplyShot."})]})})]})]})}function c(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>n,x:()=>d});var t=s(96540);const a={},i=t.createContext(a);function n(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);